"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.GoogleOauthClient=GoogleOauthClient,exports.getGoogleOAuthURL=getGoogleOAuthURL,exports.verifyGoogleToken=verifyGoogleToken;const googleapis_1=require("googleapis"),helper_1=require("tezx/helper");function GoogleOauthClient(e){const{clientId:t,clientSecret:o,redirectUri:r}=e;return new googleapis_1.google.auth.OAuth2(t,o,r)}function getGoogleOAuthURL({scopes:e=["openid","email","profile"],authClient:t,loginHint:o,prompt:r="consent select_account",accessType:n="offline",includeGrantedScopes:i=!0}){return(s,a)=>{let c=`req-${(0,helper_1.generateID)()}`;s.header("state",c);const l=t.generateAuthUrl({access_type:n,scope:e,state:c,login_hint:o,prompt:r,include_granted_scopes:i});return s.state.set("google",l),a?a():s.redirect(l)}}function verifyGoogleToken({authClient:e,onError:t,Callbacks:o,onSuccess:r}){return async(n,i)=>{try{const s=n.req.query;if(s?.error){if(t)return t?.(s.error);throw new Error(s.error)}if(s.code){const{tokens:a,res:c}=await e.getToken(s.code);e.setCredentials(a);const l=a?.id_token,g=await fetch(`https://oauth2.googleapis.com/tokeninfo?id_token=${l}`),u=await g.json();if(u.aud!==e?._clientId)throw new Error("Invalid client ID");if(o.signIn){if(!await o.signIn(u)){if(t)return t("Sign-in rejected");throw new Error("Sign-in rejected")}}let h=a;if(o.jwt&&(h=await o.jwt(a,u)),o.session){const e=await o.session({token:h},u);n.session=e}return await(r?.(h,c)),await i()}if(t)return t?.("Missing authorization code");throw new Error("Missing authorization code")}catch(e){if(t)return t?.(e.message);throw new Error(e?.message)}}}